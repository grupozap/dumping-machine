apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'application'

buildscript {
    repositories {
        mavenLocal()
        mavenCentral()
        maven { url 'http://packages.confluent.io/maven/'}
        maven { url 'http://conjars.org/repo/'}
    }
}

allprojects {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8

    repositories {
        mavenLocal()
        mavenCentral()
        maven { url "http://packages.confluent.io/maven/" }
        maven { url 'http://conjars.org/repo/'}
    }

    dependencies {
        compile group: 'org.yaml', name: 'snakeyaml', version: "${snakeyamlVersion}"
        compile group: 'org.apache.kafka', name: 'kafka_2.12', version: "${kafkaVersion}"
        compile group: 'org.apache.parquet', name: 'parquet-avro', version: "${parquetAvroVersion}"
        compile group: 'org.apache.hadoop', name: 'hadoop-common', version: "${hadoopVersion}"
        compile group: 'io.confluent', name: 'kafka-avro-serializer', version: "${avroVersion}"
        compile group: 'com.google.code.gson', name: 'gson', version: "${gsonVersion}"
        compile group: 'org.slf4j', name: 'slf4j-log4j12', version: "${slf4jVersion}"
        compile group: 'com.amazonaws', name: 'aws-java-sdk', version: "${awsJavaSdkVersion}"
        compile group: 'org.apache.hadoop', name: 'hadoop-client', version: "${hadoopClientVersion}"
        compile group: 'org.apache.logging.log4j', name: 'log4j-core', version: "${log4jCore}"
        compile group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: "${jacksonDatabind}"
        compile(group: 'org.apache.hive', name: 'hive-metastore', version: "${hiveVersion}") {
            exclude group: 'org.apache.zookeeper', module: 'zookeeper'
        }
        compile(group: 'org.apache.hive', name: 'hive-exec', version: "${hiveVersion}", classifier: 'core') {
            exclude group: 'org.apache.zookeeper', module: 'zookeeper'
        }
        compile fileTree(dir: 'libs', include: ['*.jar'])
    }

    sourceSets {
        integrationTest {
            java {
                compileClasspath += main.output + test.output
                runtimeClasspath += main.output + test.output
            }
        }
    }

    application {
        mainClassName = "com.grupozap.dumping_machine.Application"
    }

    tasks.withType(JavaExec) {
        // Assign all Java system properties from
        // the command line to the JavaExec task.
        systemProperties System.properties
    }
    
    jar {
        manifest {
            attributes(
                'Main-Class': 'com.grupozap.dumping_machine.Application'
            )
        }
    }
}
